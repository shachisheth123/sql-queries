--------------------------------------------------------------------------------------------------------------------
1.	Display all departments from department table.
mysql> select * from departments;

2. Display all employees from employee table.
mysql> select * from employees;

3.	Select the employee in department 30.
mysql> SELECT last_name ,  department_id
    -> FROM employees
    -> WHERE  department_id=30;
	
4.	List the names, numbers and departmentno of all clerks.
mysql> SELECT last_name ,  phone_number , job_id, department_id
    -> FROM employees
    -> WHERE Job_id LIKE "%CLERK";
	
5.	Find the depart numbers and the name of employee of all dept with Deptno greater or equal to 20.
mysql> SELECT  department_id,last_name
    -> FROM employees
    -> WHERE department_id>=20;

9.	List the name, job and salary of all employees in dept 20 who earn more than 2000.
mysql> SELECT department_id , last_name , Job_id ,salary
    -> FROM employees
    -> WHERE department_id=20 and salary>2000;
	
12.	Find all managers who are not in dept 30.
mysql> SELECT first_name
    -> FROM employees
    -> WHERE manager_id<> 30;
	
17.	Find the employees who earns between Rs. 1200 and Rs.1400.	
mysql> SELECT *
    -> FROM Employees
    -> WHERE salary BETWEEN 1200 AND 1400;
Empty set (0.00 sec)

18.	Find the employees who are clerks, analysts or salesman.
mysql> SELECT * FROM employees WHERE job_id LIKE '%CLERK'
    -> UNION
    -> SELECT * FROM employees WHERE job_id LIKE 'SA%';
	
20.	Find the employees who do not receive a commission i.e. commission is NULL.
mysql> SELECT *
    -> FROM EMPLOYEES
    -> WHERE commission_pct IS NULL;
	
21.	Find the employee whose commission is Rs. 0.
mysql> SELECT last_name,commission_pct
    -> FROM employees
    -> WHERE commission_pct=0;
Empty set (0.00 sec)

22.	Find the different jobs of the employees receiving commission.
mysql> SELECT *
    -> FROM Employees
    -> WHERE commission_pct IS NOT NULL;
	
23.	Find all employees who do not receive a commission or whose Commission is less than Rs. 100. 
mysql> SELECT * FROM Employees WHERE commission_pct IS NULL
    -> UNION
    -> SELECT * FROM Employees WHERE salary*commission_pct < 1000;

24.	The employees who not receiving commission are entailed to Rs. 250, Show the net earnings of all employees. (find about nvl() )
mysql> SELECT IFNULL(commission_pct , 250)
    -> FROM employees;

25.	Find all employees whose total earnings are greater than Rs. 2000.
mysql> SELECT first_name , last_name , (commission_pct+salary) as EARNINGS
    -> FROM employees
    -> WHERE (commission_pct+salary) > 2000;
	
26.	Find all employees whose names begin with m.
mysql> SELECT *
    -> FROM employees
    -> WHERE first_name LIKE "M%";
	
27.	Find all employees whose names end with m.
mysql> SELECT *
    -> FROM Employees
    -> WHERE first_name LIKE "%M";
	
28.	Find all employees whose names contain the letter m.
mysql> SELECT *
    -> FROM employees
    -> WHERE first_name LIKE '%M%';
	
29.	Find the employees whose names are 5 characters long and end with n.
mysql> SELECT *
    -> FROM employees
    -> WHERE LENGTH(first_name)=5 AND
    -> first_name LIKE '%N';
	
30.	Find the employees who have the letter r as the third letter in their name.
mysql> SELECT *
    -> FROM employees
    -> WHERE first_name LIKE '__r%';
	
2)	Numeric, Character & Date Function 
31.	Find all employees hired in month of February (of any year).
mysql> SELECT *
    -> FROM employees
    -> WHERE MONTH(hire_date)=2;
	
32.	Find all employees who were hired on the last day of the month. 



35.	Display the names and the jobs of all employees, separated by ','(comma). For example (smith, clerk).
mysql> SELECT concat(first_name,',',job_id)
    -> FROM employees;
	
36.	Display the names of all employees with the initial letter only in capitals.
mysql> SELECT concat(UCASE(LEFT(first_name,1)),SUBSTR(first_name,2))
    -> from employees;
	
37.	Display the names of all employees, right aligning them to 15 characters.
mysql> SELECT Right(first_name,15) from employees;
	
38.	Display the names of all employees, padding them to right up-to 15 characters with '-'.
mysql> SELECT RPAD(first_name,15,'-') from employees;

39.	Display the length of the name of all employees.
mysql> SELECT length(first_name) as Size, length(last_name) as Size
    -> from employees;
	
40.	Display the names of all employees centering them with 20 characters.
	mysql> SELECT datediff(now() , hire_date ) AS No_OF_DAYS
    -> FROM employees;

41.	Display the names of all employees without any leading 'a'.
mysql> SELECT TRIM(LEADING 'A' from first_name)
    -> FROM employees;

42.	Display the names of all employees without any trailing 'r'.
mysql> SELECT TRIM(TRAILING 'r' from first_name)
    -> FROM employees;

43.	Show the first three characters of the names of all employees.
mysql> SELECT SUBSTR(first_name,1,3)  as NAME
    -> FROM employees;

44.	Show the last three characters of the names of all employees.
mysql> SELECT SUBSTR(first_name,-3) as NAME
    -> FROM employees;

45.	Display the names of all employees replacing any 'a' with 'e'.
mysql> SELECT REPLACE(first_name,'a','e') as NEW_NAME
    -> FROM employees;	

46.	Display the names of all employees and the position at which the string 'ar' occurs in the name.
mysql> SELECT first_name , POSITION("ar" in first_name)
    -> FROM employees;

47.	Show the salary of all employees rounding it to the nearest Rs. 1000. For example (3790 will be 4000)
mysql> SELECT ROUND(salary , -3) as Salary
    -> FROM employees;

48.	Show the daily salary of all employees assuming a month has 30 days.
mysql> SELECT first_name , ((salary/12)/30) as Salary
    -> FROM employees;	

49.	Display the name of all employees, and their bonus. Assume each Employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 500.
mysql> SELECT first_name , (salary*0.20) AS Bonus
    -> FROM employees
    -> WHERE (salary * 0.20 )<500;

50.	Display the name of all employees, and their bonus. Assume each employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 200.
mysql> SELECT first_name , (salary*0.20) AS Bonus
    -> FROM employees
    -> WHERE (salary * 0.20) <200;
Empty set (0.00 sec)

51.	For each employee display the number of days passed since the employee joined the company.
mysql> SELECT datediff(now() , hire_date ) AS No_OF_DAYS
    -> FROM employees;

52.	For each employee display the number of months passed since the Employee joined the company.
mysql> SELECT TIMESTAMPDIFF(MONTH , hire_date , now()) As MONTHS
    -> FROM employees; 

53.	Display the tenure of service in the years, months and days for all Employees in character format. Assume every month has 30 days
mysql> SELECT TIMESTAMPDIFF(YEAR , hire_date , now()) as year
    -> , TIMESTAMPDIFF(MONTH , hire_date , now()) % 12  as month
    -> , TIMESTAMPDIFF(DAY , hire_date , now()) % 30  as days
    -> from employees;

54.	Display the employee details in the following manner. 'Miler joined on the twenty-third of January of the year nineteen hundred and eighty Two'.




3)	Ordering by Queries
55.	Display the details of all employees, sorted on the names.
mysql> SELECT *
    -> FROM employees
    -> order by first_name;


56.	Display the name of all employees, based on their tenure, with the oldest employee coming first.



57.	Display the names, job and salary of all employees sorted on jobs and Salary.
mysql> SELECT first_name , job_id , salary
    -> FROM employees
    -> order by job_id,salary;

58.	Display the names, job and salary of all employees, sorted on Descending order of job and within job, sorted on the descending order of salary.
 mysql> SELECT first_name , job_id , salary
    -> FROM employees
    -> order by job_id in (select salary
    ->                      from employees
    ->                        order by salary desc);

59.	Display the names, job and salary of all employees, sorted on Descending order of job and within job, sorted on the descending order of salary.
mysql> SELECT first_name , job_id , salary
    -> FROM employees
    -> ORDER BY job_id desc , salary desc;

60.	 Display the name, month and year of all employees, sorted on the month of their hire date irrespective of the year.
mysql> SELECT first_name , MONTH(hire_date) , YEAR(hire_date)
    -> FROM employees
    -> order by MONTH(hire_date);

61.	Display the name, month and year of joining of all employees, sorted on the month of their hire date, and within that on the year, with the earliest year appearing first.
mysql> SELECT first_name , MONTH(hire_date) , YEAR(hire_date)
    -> FROM employees
    -> ORDER BY MONTH(hire_date) IN (SELECT YEAR(hire_date)
    ->                                FROM employees
    ->                                  ORDER BY YEAR(hire_date));


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
